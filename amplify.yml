version: 1
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 20
        - nvm use 20
        - node --version
        - npm ci
        - npx prisma generate
        # Verify Prisma binaries were generated
        - echo "Checking for Prisma binaries..."
        - ls -la node_modules/.prisma/client/*.node || echo "Prisma binaries not found!"
        # Run database migrations (PostgreSQL via DATABASE_URL env var)
        - npx prisma migrate deploy
        # Seed historical tournament data (only if SEED_HISTORY env var is set)
        - if [ "$SEED_HISTORY" = "true" ]; then npm run db:seed-history; fi
    build:
      commands:
        - npm run build
        # Verify Prisma binaries were generated
        - echo "=== Verifying Prisma binaries for AWS Lambda ==="
        - find node_modules/.prisma/client -name "*rhel-openssl-3.0.x.so.node" -ls || echo "RHEL binary NOT FOUND!"
        # CRITICAL: Copy Prisma binaries to Next.js server output
        - echo "=== Copying Prisma binaries to .next output ==="
        - mkdir -p .next/server/node_modules/.prisma
        - cp -r node_modules/.prisma/client .next/server/node_modules/.prisma/
        - mkdir -p .next/server/node_modules/@prisma
        - cp -r node_modules/@prisma/client .next/server/node_modules/@prisma/
        - echo "=== Verifying Prisma binaries in .next/server ==="
        - ls -la .next/server/node_modules/.prisma/client/*.node || echo "Copy failed!"
        # Create .env.production for Lambda runtime (in multiple locations to ensure it's found)
        - echo "DATABASE_URL=$DATABASE_URL" > .env.production
        - echo "AUTH_SECRET=$AUTH_SECRET" >> .env.production
        - echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.production
        - echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.production
        - echo "UPSTASH_REDIS_REST_URL=$UPSTASH_REDIS_REST_URL" >> .env.production
        - echo "UPSTASH_REDIS_REST_TOKEN=$UPSTASH_REDIS_REST_TOKEN" >> .env.production
        # S3 environment variables for team logo uploads
        - echo "S3_ACCESS_KEY_ID=$S3_ACCESS_KEY_ID" >> .env.production
        - echo "S3_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY" >> .env.production
        - echo "S3_BUCKET=$S3_BUCKET" >> .env.production
        - echo "S3_REGION=$S3_REGION" >> .env.production
        - cp .env.production .next/.env.production
        - echo "=== Created .env.production for Lambda runtime ==="
        - cat .env.production
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*

